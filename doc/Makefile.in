# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#============================================================================
# create_am_macros.mk

#============================================================================
# am_vars.mk

#============================================================================
# inst_vars.mk

#============================================================================
# prog_pod.mk - generate program documentation from POD input

# this snippets orchestrates the creation of PostScript,
# HTML, and UNIX section l man pages from POD input.
# see prog_pod_base.mk for more information.

# Prerequisites:
#	create_am_macros.mk

#============================================================================
# prog_pod_base.mk - generate program documentation from POD input

# this snippets orchestrates the creation of PostScript, HTML, and
# UNIX section l man pages from POD input.  it is generally not used
# directly.

# Prerequisites:
#	create_am_macros.mk

# The caller must define
#  POD_SFX - the suffix of the pod source file
#  PODS    - the list of documentation, basenames only
#  POD_DIR - where the POD source is located. must end in / if not empty.

# Because of how automake works, the caller must set
# 	dist_manl_MANS
# to the explicit list of man pages. no makefile variables allowed!

# Note that this implies that all pod source files have the same suffix
# If this is not the case, add rules to create .pod files like so:
#
# %.pod : %.xx
#	podselect %< > $@
#
# and set POD_SFX to .pod.  Just make sure that %.xx is an invariant
# file (i.e. not something created from a .in file).  Usually just using
# the .in file as the source is pretty safe.

#============================================================================
# pod_html.mk

# The caller must define
#  POD_SRC - the POD source file pattern match (see prog_pod.mk)
#  POD_SFX - the suffix of the pod source file
#  PODS    - the list of documentation, basenames only

# Note that this implies that all pod source files have the same suffix
# If this is not the case, add rules to create .pod files like so:
#
# %.pod : %.xx
#	podselect %< > $@
#
# and set POD_SFX to .pod.  Just make sure that %.xx is an invariant
# file (i.e. not something created from a .in file).  Usually just using
# the .in file as the source is pretty safe.

# The caller must 
#	include create_am_macros.mk
# prior to 
#	include pod_html.mk

# if the caller is using this file directly (and not going through prog_pod.mk)
# add
#
#   EXTRA_DIST += $(PODS:%=%$(POD_SFX))

#============================================================================
# pod_man_init.mk

# Variables required:
#
#  POD_DIR
#     where the POD source is located. usually $(srcdir)/ or empty.
#
#  POD_SFX
#     the file suffix on the POD source

#============================================================================
# pod_manl.mk

# Snippets required:
#	create_am_macros.mk
#	pod_man_init.mk

# Variables required:
#
# see pod_man_init.mk
#
#  PODLSFX 
#    may be empty.  explicit suffix for .l files. used in conjunction
#    with POD_SFX

# ensure that 
#
#	pod_man_l.mk
#	pod_man_3.mk
#	pod_man_5.mk
#	pod_man_7.mk
#
# are kept in sync!

#============================================================================
# pod_ps_init.mk

# this snippet initializes the "environment" for the pod_ps family of snippets

# Prerequisites:
#	create_am_macros.mk

#============================================================================
# pod_psl.mk - generate PostScript from man section l input

# Prerequisites:
#	pod_ps_init.mk
#	pod_manl.mk

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = $(dist_html_DATA) $(dist_manl_MANS) $(dist_pdf_DATA) \
	$(dist_ps_DATA) $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/snippets/am_vars.mk \
	$(top_srcdir)/snippets/create_am_macros.mk \
	$(top_srcdir)/snippets/inst_vars.mk \
	$(top_srcdir)/snippets/pod_html.mk \
	$(top_srcdir)/snippets/pod_man_init.mk \
	$(top_srcdir)/snippets/pod_manl.mk \
	$(top_srcdir)/snippets/pod_ps_init.mk \
	$(top_srcdir)/snippets/pod_psl.mk \
	$(top_srcdir)/snippets/prog_pod.mk \
	$(top_srcdir)/snippets/prog_pod_base.mk
subdir = doc
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/snippets/lib_lua.ac \
	$(top_srcdir)/snippets/pod_docs.ac $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
manldir = $(mandir)/manl
am__installdirs = "$(DESTDIR)$(manldir)" "$(DESTDIR)$(htmldir)" \
	"$(DESTDIR)$(pdfdir)" "$(DESTDIR)$(psdir)"
NROFF = nroff
MANS = $(dist_manl_MANS)
DATA = $(dist_html_DATA) $(dist_pdf_DATA) $(dist_ps_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
GROFF = @GROFF@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
LUA = @LUA@
LUAC = @LUAC@
LUA_VERSION = @LUA_VERSION@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POD2HTML = @POD2HTML@
POD2MAN = @POD2MAN@
PS2PDF = @PS2PDF@
ROCKSPEC_FILE_NAME = @ROCKSPEC_FILE_NAME@
ROCKSPEC_VERSION = @ROCKSPEC_VERSION@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@

# automake variables that should have been there all along
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = $(datadir)/doc/$(PACKAGE)/html
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
luaclibdir = @luaclibdir@
lualibdir = @lualibdir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = $(datadir)/doc/$(PACKAGE)
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = $(datadir)/doc/$(PACKAGE)
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CREATE_AM_MACROS_MK = 
AM_VARS_MK = 
mst_program_prefix = @mst_program_prefix@
INST_VARS_MK = 

# our version of inst-vars.am
strip_dir = `echo $$p | sed -e 's|^.*/||'`;

#-------------------------------------------------------------------
# The following must ALWAYS be defined, as certain makefile snippets
# require them.  If you get errors like
#
#  EXTRA_DIST must be set with `=' before using `+='
#
# we've missed defining one here.

# sources that must be made prior to compilation

#-------------------------------------------------------------------
#

# sources that must be made prior to compilation
BUILT_SOURCES =

# extra files to add to the distribution

# extra files to add to the distribution
EXTRA_DIST = validate.args.pod validate.inplace.pod \
	$(PODS:%=%$(POD_SFX))

# Files tha make built but that one would want to rebuild
MOSTLYCLEANFILES = 

# Any other files make built

# Any files make built.

# Any files make built
CLEANFILES = pod2htmi.tmp pod2htmd.tmp

# Any files configure built

# Any files configure built
DISTCLEANFILES =

# Any files maintainer built (with autoconf, automake, etc)

# Any files maintainer built(with autoconf, automake, etc)
MAINTAINERCLEANFILES = Makefile.in $(POD_HTML) $(dist_manl_MANS) \
	$(POD_PS) $(POD_PDF)

# Extra suffixes for automake
SUFFIXES = .html .l .ps .pdf .l.ps .l.pdf
POD_DIR = $(srcdir)/
POD_HTML = $(PODS:%=%.html)
dist_html_DATA = $(POD_HTML)
POD_MAN = $(dist_manl_MANS)
POD_PS = $(PODS:%=%.ps)
POD_PDF = $(PODS:%=%.pdf)
dist_ps_DATA = $(POD_PS)
dist_pdf_DATA = $(POD_PDF)

#-------------------------------------------------------------------
# Snippets go after here, unless their docs say otherwise

# this must be an explicit list of man pages; no make variables allowed.
# currently, only section l man pages are supported.
dist_manl_MANS = validate.args.l
POD_SFX = .pod
PODS = validate.args validate.inplace
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .html .l .ps .pdf .l.ps .l.pdf
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/snippets/create_am_macros.mk $(top_srcdir)/snippets/am_vars.mk $(top_srcdir)/snippets/inst_vars.mk $(top_srcdir)/snippets/prog_pod.mk $(top_srcdir)/snippets/prog_pod_base.mk $(top_srcdir)/snippets/pod_html.mk $(top_srcdir)/snippets/pod_man_init.mk $(top_srcdir)/snippets/pod_manl.mk $(top_srcdir)/snippets/pod_ps_init.mk $(top_srcdir)/snippets/pod_psl.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign doc/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign doc/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-manl: $(dist_manl_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(manldir)" || $(MKDIR_P) "$(DESTDIR)$(manldir)"
	@list='$(dist_manl_MANS)'; test -n "$(manldir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^l][0-9a-z]*$$,l,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(manldir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(manldir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(manldir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(manldir)" || exit $$?; }; \
	done; }

uninstall-manl:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_manl_MANS)'; test -n "$(manldir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^l][0-9a-z]*$$,l,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(manldir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(manldir)" && rm -f $$files; }
install-dist_htmlDATA: $(dist_html_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(htmldir)" || $(MKDIR_P) "$(DESTDIR)$(htmldir)"
	@list='$(dist_html_DATA)'; test -n "$(htmldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(htmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(htmldir)" || exit $$?; \
	done

uninstall-dist_htmlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_html_DATA)'; test -n "$(htmldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(htmldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(htmldir)" && rm -f $$files
install-dist_pdfDATA: $(dist_pdf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pdfdir)" || $(MKDIR_P) "$(DESTDIR)$(pdfdir)"
	@list='$(dist_pdf_DATA)'; test -n "$(pdfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pdfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pdfdir)" || exit $$?; \
	done

uninstall-dist_pdfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pdf_DATA)'; test -n "$(pdfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pdfdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pdfdir)" && rm -f $$files
install-dist_psDATA: $(dist_ps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(psdir)" || $(MKDIR_P) "$(DESTDIR)$(psdir)"
	@list='$(dist_ps_DATA)'; test -n "$(psdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(psdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(psdir)" || exit $$?; \
	done

uninstall-dist_psDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_ps_DATA)'; test -n "$(psdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(psdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(psdir)" && rm -f $$files
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(MANS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(manldir)" "$(DESTDIR)$(htmldir)" "$(DESTDIR)$(pdfdir)" "$(DESTDIR)$(psdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_htmlDATA install-dist_pdfDATA \
	install-dist_psDATA install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-manl

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_htmlDATA uninstall-dist_pdfDATA \
	uninstall-dist_psDATA uninstall-man

uninstall-man: uninstall-manl

.MAKE: all check install install-am install-strip

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-dist_htmlDATA install-dist_pdfDATA install-dist_psDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-manl install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am uninstall \
	uninstall-am uninstall-dist_htmlDATA uninstall-dist_pdfDATA \
	uninstall-dist_psDATA uninstall-man uninstall-manl


%.html: $(POD_DIR)%$(POD_SFX)
	pod2html --outfile=$@ --infile=$< --title=`basename $< $(POD_SFX)`

%.l: $(POD_DIR)%$(PODLSFX)$(POD_SFX)
	pod2man --name=`basename $< $(PODLSFX)$(POD_SFX)` \
		--section=l --release=' ' --center=' ' $< > $@

%.l.ps: %.l
	groff -man $< > $@

%.ps: %.l
	groff -man $< > $@

%.l.pdf : %.l.ps
	ps2pdf $< $@

%.pdf : %.ps
	ps2pdf $< $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
